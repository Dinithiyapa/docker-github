name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_API: yapadinithi/api
      DOCKER_IMAGE_WEB: yapadinithi/web

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build API Docker Image
      run: |
        docker build -t $DOCKER_IMAGE_API:latest ./api
        docker push $DOCKER_IMAGE_API:latest

    - name: Build Web Docker Image
      run: |
        docker build -t $DOCKER_IMAGE_WEB:latest ./web
        docker push $DOCKER_IMAGE_WEB:latest

    - name: Copy files to target server via SCP
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        port: 22
        key: ${{ secrets.DEPLOY_KEY }}
        source: "./docker-compose.yml,./nginx.conf,./.env"
        target: "~/.deploy/${{ github.event.repository.name }}/"

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          # Ensure Docker and Docker Compose are installed on the EC2 instance
          if [ ! -f ~/setup.sh ]; then
            echo "setup.sh not found, skipping EC2 setup."
          else
            bash ~/setup.sh
          fi
          
          # Stop existing containers
          docker-compose down || true
          
          # Pull the latest images
          docker pull $DOCKER_IMAGE_API:latest
          docker pull $DOCKER_IMAGE_WEB:latest
          docker pull postgres:9.6  # Pull PostgreSQL image
          docker pull nginx:alpine  # Pull Nginx image
          
          # Navigate to the project directory where docker-compose.yml is located
          cd ~/.deploy/${{ github.event.repository.name }}
          
          # Start all services defined in docker-compose.yml
          docker-compose up -d
